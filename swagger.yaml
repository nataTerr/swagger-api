swagger: '2.0'
info:
  description: 'This is an example of a online store server.'
  version: 1.0.1
  title: Online Store Portal
  #termsOfService: http://swagger.io/terms/
  #contact:
 #   email: apiteam@swagger.io
 # license:
   # name: Apache 2.0
   # url: http://www.apache.org/licenses/LICENSE-2.0.html
#host: api
basePath: /api/v1
tags:
  - name: site
    description: Online Store front API service
    externalDocs:
      description: Find out more
      url: https://github.com/nataTerr/online-store-portal
  - name: order
    description: Service for working with orders
    externalDocs:
      description: Find out more
      url: https://github.com/nataTerr/online-store-portal
  - name: accounting system
    description: Integration service with 1C
    externalDocs:
      description: Find out more
      url: https://github.com/nataTerr/online-store-portal
schemes:
  - https
  - http
paths:
  /catalog:
    get:
      tags:
        - site
      summary: Finds all categories in the catalog
      description: Catalog categories are represented in a hierarchy by strings
      operationId: findAllCategories
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Catalog'
        '400':
          description: Invalid status value
  /catalog/breadcrumbs/{categoryId}:
    get:
      tags:
        - site
      summary: Finds parent categories by ID category
      description: Returns an array of categories (string)
      operationId: findParentCategoriesByCategoryID
      produces:
        - application/json
      parameters:
        - name: categoryID
          in: path
          description: ID of category to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
  /catalog/{parentCategoryId}/categories:
    get:
      tags:
        - site
      summary: Find categories by ID parent category
      description: Returns an array of categories (string)
      operationId: findCategoriesByParentCategoryID
      produces:
        - application/json
      parameters:
        - name: parentCategoryID
          in: path
          description: ID of parent category to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
             $ref: '#/definitions/Category'
  /products/categories/{categoryId}:
    get:
      tags:
        - site
      summary: Find all products specified by category and parent category
      description: Returns an array of products
      operationId: findProductsByCategoryID
      produces:
        - application/json
      parameters:
        - name: categoryID
          in: path
          description: ID of category to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductShortCard'
  /products/{productId}/detail/info:
    get:
      tags:
        - site
      summary: Find product card
      description: Returns an object of product
      operationId: findProductCard
      produces:
        - application/json
      parameters:
        - name: productID
          in: path
          description: ID of product to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ProductCard'
        '404':
          description: Product not found
definitions:
  ProductShortCard:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: string
#        format: int32
      images:
        type: array
        items:
          type: string
      shortDescription:
        type: string
      pagination:
        type: object
        $ref: '#/definitions/Pagination'
  ProductCard:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: string
#        format: int32
      images:
        type: array
        items:
          type: string
      description:
        type: string
      properties:
        type: array
        items:
          $ref: '#/definitions/ProductProperties'
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      caption:
        type: string
  ProductProperties :
    type: object
    properties:
      name:
        type: string
      value:
        type: string
  Pagination:
    type: object
    properties:
      pageNumber:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      total:
        type: integer
        format: int32
  Catalog:
    type: object
    properties:
      id:
        type: integer
        format: int64
      caption:
        type: string
      categories:
        type: array
        items:
         $ref: '#/definitions/Category'
